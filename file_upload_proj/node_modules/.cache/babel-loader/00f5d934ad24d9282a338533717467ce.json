{"ast":null,"code":"var _jsxFileName = \"/Users/mahmoudshabana/Documents/Youtube Crash Courses/AWS/File_Upload_System/file-upload-system/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      fileUploadedSuccessfully: false\n    };\n\n    this.onFileChange = event => {\n      // set the state to select the first file \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"demo file\", this.state.selectedFile, // File content\n      this.state.selectedFile.name // Name of the File\n      );\n      /** Call API to upload file\n       * Set selected file back to null b/c we already uploaded it\n       * Then set fileUploadedSuccessfully equal to true\n      */\n\n      console.log(formData);\n      this.setState({\n        selectedFile: null\n      });\n      this.setState({\n        fileUploadedSuccessfully: true\n      });\n    };\n\n    this.fileData = () => {\n      // Check if we already have a file selected, if so show details of file\n      if (this.state.selectedFile) {\n        // Show details of file that is selected to upload\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified: \", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this);\n      } else if (this.state.fileUploadedSuccessfully) {\n        // If file is uploaded successfully, return a message to user\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your File has been successfully uploaded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this);\n      } else {\n        // if user has not selected anything or uploaded anything\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please choose a file and select the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // ClassName to apply css to div\n      _jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mahmoud's File Upload System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"File Upload the netflix and chill ndndobdundndoudndmodwith React and a Serverless API on AWS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), this.fileData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mahmoudshabana/Documents/Youtube Crash Courses/AWS/File_Upload_System/file-upload-system/src/App.js"],"names":["React","Component","App","state","selectedFile","fileUploadedSuccessfully","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,wBAAwB,EAAE;AAFpB,KADkB;;AAAA,SAO1BC,YAP0B,GAOXC,KAAK,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAVyB;;AAAA,SAa1BC,YAb0B,GAaX,MAAM;AACnB,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,WADF,EAEE,KAAKX,KAAL,CAAWC,YAFb,EAE2B;AACzB,WAAKD,KAAL,CAAWC,YAAX,CAAwBW,IAH1B,CAG+B;AAH/B;AAKA;AACJ;AACA;AACA;;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,WAAKI,QAAL,CAAc;AAAEH,QAAAA,wBAAwB,EAAE;AAA5B,OAAd;AACD,KA3ByB;;AAAA,SA6B1Ba,QA7B0B,GA6Bf,MAAM;AACf;AACA,UAAI,KAAKf,KAAL,CAAWC,YAAf,EAA6B;AAC3B;AACA,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBW,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAKZ,KAAL,CAAWC,YAAX,CAAwBe,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,0CAAmB,GAAnB,EACG,KAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,gBAAxB,CAAyCC,YAAzC,EADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAZD,MAYO,IAAI,KAAKlB,KAAL,CAAWE,wBAAf,EAAyC;AAC9C;AACA,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OARM,MAQA;AACL;AACA,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AAEF,KA7DyB;AAAA;;AA+D1BiB,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,kCAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAKhB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAYG,KAAKO,QAAL,EAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAiBD;;AAjFyB;;AAqF5B,eAAehB,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    selectedFile: null,\n    fileUploadedSuccessfully: false\n  }\n\n  // This is an error function that takes in an event\n  onFileChange = event => {\n    // set the state to select the first file \n    this.setState({ selectedFile: event.target.files[0] });\n  }\n\n  // This is also an error function that doesnt take an event\n  onFileUpload = () => {\n    const formData = new FormData();\n    formData.append(\n      \"demo file\",\n      this.state.selectedFile, // File content\n      this.state.selectedFile.name // Name of the File\n    )\n    /** Call API to upload file\n     * Set selected file back to null b/c we already uploaded it\n     * Then set fileUploadedSuccessfully equal to true\n    */\n    console.log(formData);\n    this.setState({ selectedFile: null })\n    this.setState({ fileUploadedSuccessfully: true })\n  }\n\n  fileData = () => {\n    // Check if we already have a file selected, if so show details of file\n    if (this.state.selectedFile) {\n      // Show details of file that is selected to upload\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Name: {this.state.selectedFile.type}</p>\n          <p>Last Modified: {\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else if (this.state.fileUploadedSuccessfully) {\n      // If file is uploaded successfully, return a message to user\n      return (\n        <div>\n          <br />\n          <h4>Your File has been successfully uploaded</h4>\n        </div>\n      );\n    } else {\n      // if user has not selected anything or uploaded anything\n      return (\n        <div>\n          <br />\n          <h4>Please choose a file and select the Upload button</h4>\n        </div>\n      );\n    }\n\n  }\n\n  render() {\n    return (\n      // ClassName to apply css to div\n      < div className=\"main-container\" >\n        <h2>Mahmoud's File Upload System</h2>\n        <h3>File Upload the netflix and chill ndndobdundndoudndmodwith React and a Serverless API on AWS</h3>\n        <div>\n          {/** Where we handle the file upload, and button for uploading to S3 Bucket */}\n          <input type=\"file\" onChange={this.onFileChange} />\n          <button onClick={this.onFileUpload} >\n            Upload\n          </button>\n\n        </div>\n        {/** This will display the file details */}\n        {this.fileData()}\n      </div >\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}